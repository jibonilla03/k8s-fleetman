# This workflow will build and deploy a new Kubernetes deployment to Amazon EKS,
# when there is a push to the "main" branch.
#
# To use this workflow, you will need to complete the following set-up steps:
#
# 1. Create an EKS Cluster called fleetman.
#    For example: `eksctl create cluster --name <cluster-name> --nodes-min=3 --version 1.22`.
#    Replace the value of the `cluster-name` to match your EKS cluster name.
#
# 2. Install kubectl.
#    For example, Kubectl tool installer plugin on the Marketplace:
#      https://github.com/marketplace/actions/kubectl-tool-installer
#
# 3. Store an IAM user access key in GitHub Actions secrets named `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`.
#    See the documentation for each action used below for the recommended IAM policies for this IAM user,
#    and best practices on handling the access key credentials.
#
# 4. Update Kube Config.
#    Configures kubectl so that you can connect to an Amazon EKS cluster.
#    The format should follow the output of `aws eks update-kubeconfig --name ${{ env.ECS_CLUSTER }} --region ${{ env.AWS_REGION }}`.
#    Replace the value of the `ECS_CLUSTER` environment variable in the workflow below with EKS cluster name.
#    Replace the value of the `AWS_REGION` environment variable in the workflow below AWS region
#
# 5. Deploy to EKS
#    manages applications through files defining Kubernetes resources. It creates and updates resources in a cluster through running kubectl apply

name: Deploy to Amazon EKS

on:
  push:
    branches: [ " jibonilla03-patch-1" ]

env:
  AWS_REGION: "us-east-1"                   # set this to your preferred AWS region, e.g. us-west-1
  EKS_CLUSTER: "fleetman"                 # set this to your Amazon ECS cluster name

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install kubectl 
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.25.4' # default is latest stable
      id: install

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Update kube config
      run: aws eks update-kubeconfig --name ${{ env.ECS_CLUSTER }} --region ${{ env.AWS_REGIONN }}

    - name: Deploy to EKS
      run: |
        kubectl apply -f .
        kubectl apply -f monitoring/crds.yaml
        kubectl apply -f monitoring/eks-monitoring.yaml